[gd_scene load_steps=8 format=3 uid="uid://cbxplnwxbictr"]

[ext_resource type="PackedScene" uid="uid://u314npnfkxtw" path="res://art/models/box-small.glb" id="2_0mhg1"]
[ext_resource type="AudioStream" uid="uid://cl4mjlmpxh67l" path="res://audio/sfx/hurt-2.ogg" id="3_ypncc"]

[sub_resource type="GDScript" id="GDScript_a0lp0"]
script/source = "extends CharacterBody3D

@export_group(\"Movement and size\")
@export var min_speed = 3
@export var max_speed = 5
@export var min_scale = 1.0
@export var max_scale = 3.0

@export_group(\"Animation\")
@export var collision_shape: CollisionShape3D
@export var animation_player: AnimationPlayer

@export_group(\"Sound\")
@export var death_sound: AudioStreamPlayer

var is_dead = false

func _ready() -> void:
    # Set collision layers for boxes
    # Layer 2 for boxes, can collide with player (layer 1) but not coins (layer 3)
    collision_layer = 2
    collision_mask = 1  # Only collide with player

func _physics_process(_delta: float) -> void:
    move_and_slide()

func initiliaze(start_position: Vector3) -> void:
    var target = Vector3.BACK
    look_at_from_position(start_position, start_position + target, Vector3.UP)
    
    var random_speed = randf_range(min_speed, max_speed)
    velocity = Vector3.FORWARD * random_speed
    velocity = velocity.rotated(Vector3.UP, rotation.y)
    
    var target_scale = Vector3(
        randf_range(min_scale, max_scale),
        1.0,
        randf_range(min_scale, max_scale)
    )
    scale *= target_scale
    rotate_y(randf_range(-PI / 4, PI / 4))

func _on_visible_on_screen_notifier_3d_screen_exited() -> void:
    queue_free()

func squash() -> void:
    if is_dead:
        return
    
    SignalBus.enemy_squashed.emit()
    is_dead = true
    collision_shape.disabled = true
    animation_player.play(\"squash\")
    _play_squash_sound()

func _play_squash_sound() -> void:
    death_sound.pitch_scale = pow(1.05, Scoreboard.combo)
    death_sound.play()

func is_alive() -> bool:
    return !is_dead
"

[sub_resource type="BoxShape3D" id="BoxShape3D_pqe15"]
size = Vector3(0.517269, 0.442566, 0.424416)

[sub_resource type="Animation" id="Animation_pqe15"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Pivot/box-small2:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_odhf8"]
resource_name = "squash"
length = 0.303
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Pivot/box-small2:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3),
"transitions": PackedFloat32Array(0.318639, 1),
"update": 0,
"values": [Vector3(1, 1, 1), Vector3(1.5, 0.04, 1.5)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_50pm5"]
_data = {
"RESET": SubResource("Animation_pqe15"),
"squash": SubResource("Animation_odhf8")
}

[node name="Enemy" type="CharacterBody3D" groups=["enemy"]]
transform = Transform3D(0.587846, 0, 0, 0, 0.587846, 0, 0, 0, 0.587846, 0, 0, 0)
collision_layer = 2
collision_mask = 0
script = SubResource("GDScript_a0lp0")

[node name="Pivot" type="Node3D" parent="."]

[node name="box-small2" parent="Pivot" instance=ExtResource("2_0mhg1")]

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 0.00863269, 0.222931, 0.00602907)
shape = SubResource("BoxShape3D_pqe15")

[node name="VisibleOnScreenNotifier3D" type="VisibleOnScreenNotifier3D" parent="." groups=["enemy"]]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 0, 0, 0)
aabb = AABB(-0.29262, 0.00587893, -0.279743, 0.585238, 0.546836, 0.570228)

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_50pm5")
}

[node name="Audio" type="Node" parent="."]

[node name="Hurt" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("3_ypncc")

[connection signal="screen_exited" from="VisibleOnScreenNotifier3D" to="." method="_on_visible_on_screen_notifier_3d_screen_exited"]
